#!/usr/bin/env node

/**
 * @author Seena Rowhani
 * service.js
 * Runs job to scrape twitter activity and
 * insert values into sqlite3 db file.
 * @param  {[type]} Twitter, sqlite3
 * @return void
 */
(function(Twitter, sqlite3, utils, io) {
  'use strict';
  var p = utils.prompt();
  var socket = io.connect('http://localhost:3000');
  var db = new sqlite3.Database('data/democracy.db');
  var client = new Twitter({
    consumer_key: process.env.TWITTER_CONSUMER_KEY,
    consumer_secret: process.env.TWITTER_CONSUMER_SECRET,
    access_token_key: process.env.TWITTER_ACCESS_KEY,
    access_token_secret: process.env.TWITTER_ACCESS_SECRET,
  });
  db.serialize(function() {
    [{
      name: 'tweets',
      params: ['id INTEGER PRIMARY KEY', 'text TEXT', 'user_id INTEGER']
    }, {
      name: 'users',
      params: ['id INTEGER PRIMARY KEY', 'screen_name TEXT', 'profile_image TEXT', 'location TEXT']
    }].forEach(function(e) {
      db.run('create table if not exists ' + e.name + '( ' + e.params.join(', ') + ');')
    });

    client.stream('statuses/filter', {
      lang: 'en',
      track: process.argv[2]
    }, function(stream) {
      utils.log(p.start + '\nPress CTRL + C to exit.');
      stream.on('data', function(tweet) {
        var abbr = tweet.user.location ? utils.abbr(tweet.user.location) : false;
        var notRT = process.argv[2].split(',').some(function(e) {
          return tweet.text.toLowerCase().indexOf(e) > -1;
        });
        if (abbr && notRT) {
          utils.log(p.response);
          db.run('insert into tweets values(?, ?, ?)',
            tweet.id,
            tweet.text,
            tweet.user.id,
            function(err, res) {
              if (!err) {
                db.run('insert into users values(?, ?, ?, ?)',
                  tweet.user.id,
                  tweet.user.screen_name,
                  tweet.user.profile_image_url,
                  abbr,
                  utils.error
                );
                socket.emit('push', {
                  location: abbr,
                  screen_name: tweet.user.screen_name,
                  text: tweet.text,
                  user_id: tweet.user.id
                });
              }
            }
          );

        }
      });
      stream.on('error', utils.error);
    });
  });
})(require('twitter'),
  require('sqlite3'),
  require('../utils'),
  require('socket.io-client')
);
require('process').on('SIGINT', function() {
  console.log('\nGoodbye!');
  process.exit();
});
